-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.coaches
(
    "coachID" serial NOT NULL,
    username character varying(50) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    profile_picture character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT coaches_pkey PRIMARY KEY ("coachID"),
    CONSTRAINT coaches_email_unique UNIQUE (email),
    CONSTRAINT coaches_username_key UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS public.cyclist_training_plans
(
    "cyclistID" integer NOT NULL,
    "plansID" integer NOT NULL,
    CONSTRAINT cyclist_training_plans_pkey PRIMARY KEY ("cyclistID", "plansID")
);

CREATE TABLE IF NOT EXISTS public.cyclists
(
    "cyclistID" serial NOT NULL,
    "coachID" integer NOT NULL,
    username character varying(50) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    date_of_birth date,
    height_cm integer,
    weight_kg integer,
    profile_picture character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT cyclists_pkey PRIMARY KEY ("cyclistID"),
    CONSTRAINT cyclists_email_unique UNIQUE (email),
    CONSTRAINT cyclists_username_key UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS public.training_plan_templates
(
    "sessionID" serial NOT NULL,
    "planID" integer,
    type character varying(50) COLLATE pg_catalog."default" NOT NULL,
    duration interval NOT NULL,
    distance numeric NOT NULL,
    intensity character varying(50) COLLATE pg_catalog."default",
    notes text COLLATE pg_catalog."default",
    CONSTRAINT training_plan_templates_pkey PRIMARY KEY ("sessionID")
);

CREATE TABLE IF NOT EXISTS public.training_plans
(
    "plansID" serial NOT NULL,
    "coachID" integer NOT NULL,
    start_date timestamp without time zone NOT NULL,
    description text COLLATE pg_catalog."default",
    executed character varying(3) COLLATE pg_catalog."default" DEFAULT 'No'::character varying,
    CONSTRAINT training_plans_pkey PRIMARY KEY ("plansID")
);

CREATE TABLE IF NOT EXISTS public.training_sessions
(
    "sessionsID" serial NOT NULL,
    "cyclistID" integer NOT NULL,
    altitude_avg numeric,
    altitude_max numeric,
    altitude_min numeric,
    altitudes text COLLATE pg_catalog."default",
    ascent numeric,
    calories numeric,
    descent numeric,
    distance numeric,
    distances text COLLATE pg_catalog."default",
    duration interval,
    heartrates text COLLATE pg_catalog."default",
    hr_avg integer,
    hr_max integer,
    hr_min integer,
    positions text COLLATE pg_catalog."default",
    speeds text COLLATE pg_catalog."default",
    start_time timestamp without time zone,
    steps integer,
    timestamps text COLLATE pg_catalog."default",
    total_distance numeric,
    CONSTRAINT training_sessions_pkey PRIMARY KEY ("sessionsID")
);

ALTER TABLE IF EXISTS public.cyclist_training_plans
    ADD CONSTRAINT cyclist_training_plans_cyclistid_fkey FOREIGN KEY ("cyclistID")
    REFERENCES public.cyclists ("cyclistID") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.cyclist_training_plans
    ADD CONSTRAINT cyclist_training_plans_plansid_fkey FOREIGN KEY ("plansID")
    REFERENCES public.training_plans ("plansID") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.cyclists
    ADD CONSTRAINT fk_coach FOREIGN KEY ("coachID")
    REFERENCES public.coaches ("coachID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.training_plan_templates
    ADD CONSTRAINT training_plan_templates_planid_fkey FOREIGN KEY ("planID")
    REFERENCES public.training_plans ("plansID") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.training_plans
    ADD CONSTRAINT "training_plans_coachID_fkey" FOREIGN KEY ("coachID")
    REFERENCES public.coaches ("coachID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.training_sessions
    ADD CONSTRAINT "training_sessions_cyclistID_fkey" FOREIGN KEY ("cyclistID")
    REFERENCES public.cyclists ("cyclistID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;